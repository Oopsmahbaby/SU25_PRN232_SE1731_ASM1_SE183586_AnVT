@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<SmokeQuit.Repositories.AnVT.Models.BlogPostsAnVt>


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<form asp-action="Index">
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <label class="control-label">Title</label>
                <input type="text" id="title" name="title" class="form-control" />
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label class="control-label">Category</label>
                <input type="text" id="category" name="category" class="form-control" />
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label class="control-label">Tags</label>
                <input type="text" id="tag" name="tag" class="form-control" />
            </div>
        </div>
        <div class="col-md-3 mt-4">
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-success" />
            </div>
        </div>
    </div>
</form>
<table class="table">
    @if (Model.Any())
    {
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Content)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Tags)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().IsPublic)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().ViewsCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().LikesCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().CommentsCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().CreatedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().UpdatedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Plan)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().User)
                </th>
                <th></th>
            </tr>
        </thead>
    }
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tags)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsPublic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ViewsCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LikesCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CommentsCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Plan.Reason)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Email)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.BlogPostsAnVtid">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.BlogPostsAnVtid">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.BlogPostsAnVtid">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new {
pageNumber = page,
    title = Context.Request.Query["title"],
    category = Context.Request.Query["category"],
    tag = Context.Request.Query["tag"]
}),
new PagedListRenderOptions
{
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    UlElementClasses = new[] { "pagination" }
})


